package service;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import domain.Badanie;

public class BadanieManager {

	private Connection connection;

	private String url = "jdbc:hsqldb:hsql://localhost/workdb";
	
	private String createTableBadanie = 
			"CREATE TABLE Badanie(id bigint GENERATED BY DEFAULT AS IDENTITY,"+ "nazwa varchar(40), opis varchar(100), koszt varchar(5))";
	
	private String dropTableBadanie = "DROP TABLE Badanie CASCADE";
	
	private PreparedStatement addBadanieStmt;
	private PreparedStatement editBadanieStmt;
	private PreparedStatement deleteBadanieStmt;
	private PreparedStatement deleteAllBadaniaStmt;
	private PreparedStatement getAllBadaniaStmt;
	private PreparedStatement getBadanieStmt;
	
	private Statement statement;
	
	
	public BadanieManager() {
		try {
			connection = DriverManager.getConnection(url);
			statement = connection.createStatement();

			ResultSet rs = connection.getMetaData().getTables(null, null, null, null);
			boolean tableExists = false;
			while (rs.next()) {
				if ("Badanie".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
					tableExists = true;
					break;
				}
			}

			if (!tableExists){
				statement.executeUpdate(createTableBadanie);
			}
			

			addBadanieStmt = connection
					.prepareStatement("INSERT INTO Badanie (nazwa, opis, koszt) VALUES (?, ?, ?)");
			editBadanieStmt = connection
					.prepareStatement("UPDATE Badanie SET nazwa=?, opis=?, koszt=?");
			deleteBadanieStmt = connection
					.prepareStatement("DELETE FROM Badanie where id=?");
			deleteAllBadaniaStmt = connection
					.prepareStatement("DELETE FROM Badanie");
			getAllBadaniaStmt = connection
					.prepareStatement("SELECT id, nazwa, opis, koszt FROM Badanie");
			getBadanieStmt = connection
					.prepareStatement("SELECT id, nazwa, opis, koszt FROM Badanie where id=?");
			

		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
	
	public Connection getConnection() {
		return connection;
	}
	
	
	
	public int addBadanie(Badanie Badanie) {
		int count = 0;
		try {
			addBadanieStmt.setString(1, Badanie.getNazwa());
			addBadanieStmt.setString(2, Badanie.getOpis());
			addBadanieStmt.setString(3, Badanie.getKoszt());
			count = addBadanieStmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return count;
	}
	
	
	
	public int editBadanie(Badanie Badanie) {
		int count = 0;
		try {
			editBadanieStmt.setString(1, Badanie.getNazwa());
			editBadanieStmt.setString(2, Badanie.getOpis());
			editBadanieStmt.setString(3, Badanie.getKoszt());
			count = editBadanieStmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return count;
	}
	
	
	
	public int deleteBadanie(long id) {
		int count = 0;
		try {
			deleteBadanieStmt.setLong(1, id);
			count = deleteBadanieStmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return count;
	}
	
	
	
	public void deleteAllBadania() {
		try {
			deleteAllBadaniaStmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
	
	
	public List<Badanie> getAllBadania() {
		List<Badanie> Badania = new ArrayList<Badanie>();

		try {
			ResultSet rs = getAllBadaniaStmt.executeQuery();

			while (rs.next()) {
				Badanie b = new Badanie();
				b.setId(rs.getInt("id"));
				b.setNazwa(rs.getString("nazwa"));
				b.setOpis(rs.getString("opis"));
				b.setKoszt(rs.getString("koszt"));
				Badania.add(b);
			}

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return Badania;
	}
	
	
	
	public Badanie getBadanie(long id) {
		Badanie b = new Badanie();

		try {
			getBadanieStmt.setLong(1, id);
			ResultSet rs = getBadanieStmt.executeQuery();
			while (rs.next()) {
				
				b.setId(rs.getInt("id"));
				b.setNazwa(rs.getString("nazwa"));
				b.setOpis(rs.getString("opis"));
				b.setKoszt(rs.getString("koszt"));
			}
		} catch (SQLException e) {
			e.printStackTrace();
			return null;
		}
		return b;
	}
	
	
}
